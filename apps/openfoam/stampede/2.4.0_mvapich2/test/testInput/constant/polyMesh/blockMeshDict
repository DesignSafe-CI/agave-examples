/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (-8 -8 0)
    (0 -8 0)
    (1 -8 0)
    (18 -8 0)
    (-8 -0.5 0)
    (0 -0.5 0)
    (1 -0.5 0)
    (18 -0.5 0)
    (-8 0.5 0)
    (0 0.5 0)
    (1 0.5 0)
    (18 0.5 0)
    (-8 8 0)
    (0 8 0)
    (1 8 0)
    (18 8 0)
    (-8 -8 0.5)
    (0 -8 0.5)
    (1 -8 0.5)
    (18 -8 0.5)
    (-8 -0.5 0.5)
    (0 -0.5 0.5)
    (1 -0.5 0.5)
    (18 -0.5 0.5)
    (-8 0.5 0.5)
    (0 0.5 0.5)
    (1 0.5 0.5)
    (18 0.5 0.5)
    (-8 8 0.5)
    (0 8 0.5)
    (1 8 0.5)
    (18 8 0.5)
);

blocks
(
    hex (0 1 5 4 16 17 21 20) (30 30 1) simpleGrading (0.5 0.5 1)
    hex (1 2 6 5 17 18 22 21) (5 30 1) simpleGrading (1 0.5 1)
    hex (2 3 7 6 18 19 23 22) (60 30 1) simpleGrading (2 0.5 1)
    hex (4 5 9 8 20 21 25 24) (30 5 1) simpleGrading (0.5 1 1)
    hex (6 7 11 10 22 23 27 26) (60 5 1) simpleGrading (2 1 1)
    hex (8 9 13 12 24 25 29 28) (30 30 1) simpleGrading (0.5 2 1)
    hex (9 10 14 13 25 26 30 29) (5 30 1) simpleGrading (1 2 1)
    hex (10 11 15 14 26 27 31 30) (60 30 1) simpleGrading (2 2 1)
);

edges
(
);

boundary
(
    upperwall
    {
        type symmetryPlane;
        faces
        (   
            (28 29 13 12)
            (29 30 14 13)
            (30 31 15 14)
        );
    }
    lowerwall
    {
        type symmetryPlane;
        faces
        (   
            (1 17 16 0)
            (2 18 17 1)
            (3 19 18 2)
        );

    }
    inlet
    {
        type patch;
        faces
        (   
            (0 16 20 4)
            (4 20 24 8)
            (8 24 28 12)
        );
     }
    outlet
    {
        type patch;
        faces
        (   
            (7 23 19 3)
            (11 27 23 7)
            (15 31 27 11)
        );
     }
    object
    {
        type wall;
        faces
        (   
            (5 21 22 6)
            (6 22 26 10)
            (10 26 25 9)
            (9 25 21 5)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (8 12 13 9)
            (9 13 14 10)
            (10 14 15 11)
            (4 8 9 5)
            (6 10 11 7)
            (0 4 5 1)
            (1 5 6 2)
            (2 6 7 3)
            (16 17 21 20)
            (17 18 22 21)
            (18 19 23 22)
            (20 21 25 24)
            (22 23 27 26)
            (24 25 29 28)
            (25 26 30 29)
            (26 27 31 30)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
